<?xml version = "1.0" encoding = "utf-8" ?> 
<!--' *************************************************************************
' *
' * ADOBE CONFIDENTIAL
' * ___________________
' *
' *  Copyright 2015 Adobe Systems Incorporated
' *  All Rights Reserved.
' *
' * NOTICE:  All information contained herein is, and remains
' * the property of Adobe Systems Incorporated and its suppliers,
' * if any.  The intellectual and technical concepts contained
' * herein are proprietary to Adobe Systems Incorporated and its
' * suppliers and are protected by trade secret or copyright law.
' * Dissemination of this information or reproduction of this material
' * is strictly forbidden unless prior written permission is obtained
' * from Adobe Systems Incorporated.
' *
' ************************************************************************** -->


<component name = "AdobeMobileSceneGraphTracker" extends = "Task" > 

  <interface>
    <field id = "state" type="string"/>
    <field id = "trackAction" type="bool" alwaysNotify="true"/>
    <field id = "trackState" type="bool" alwaysNotify="true"/>
    <field id = "stateEventName" type="string" alwaysNotify="true"/>
    <field id = "stateEventData" type="assocarray" alwaysNotify="true"/>
    <field id = "actionEventName" type="string" alwaysNotify="true"/>
    <field id = "actionEventData" type="assocarray" alwaysNotify="true"/>
     
    <field id = "trackingIdentifier" type="string" alwaysNotify="true"/>
    <field id = "userIdentifier" type="string" alwaysNotify="true"/>

    <field id = "privacyStatus" type="string" alwaysNotify="true"/>
    <field id = "debugLogs" type="bool" alwaysNotify="true"/>

    <field id = "mediaUpdateQoS" type="bool" alwaysNotify="true"/>
    <field id = "mediaTrackEvent" type="bool" alwaysNotify="true"/>
    <field id = "mediaTrackError" type="bool" alwaysNotify="true"/>
    <field id = "mediaTrackPause" type="bool" alwaysNotify="true"/>
    <field id = "mediaTrackUnload" type="bool" alwaysNotify="true"/>
    <field id = "mediaTrackComplete" type="bool" alwaysNotify="true"/>
    <field id = "mediaTrackPlay" type="bool" alwaysNotify="true"/>
    <field id = "mediaTrackStart" type="bool" alwaysNotify="true"/>
    <field id = "mediaTrackLoad" type="bool" alwaysNotify="true"/>

    <field id = "mediaAdStart" type="bool" alwaysNotify="true"/>
    <field id = "mediaAdData" type="assocarray" alwaysNotify="true"/>
    <field id = "mediaAdContextData" type="assocarray" alwaysNotify="true"/>
    <field id = "mediaAdComplete" type="bool" alwaysNotify="true"/>

    <field id = "mediaAdBreakStart" type="bool" alwaysNotify="true"/>
    <field id = "mediaAdBreakData" type="assocarray" alwaysNotify="true"/>
    <field id = "mediaAdBreakContextData" type="assocarray" alwaysNotify="true"/>
    <field id = "mediaAdBreakComplete" type="bool" alwaysNotify="true"/>

    <field id = "mediaChapterStart" type="bool" alwaysNotify="true"/>
    <field id = "mediaChapterData" type="assocarray" alwaysNotify="true"/>
    <field id = "mediaChapterContextData" type="assocarray" alwaysNotify="true"/>
    <field id = "mediaChapterComplete" type="bool" alwaysNotify="true"/>

    <field id = "mediaBufferStart" type="bool" alwaysNotify="true"/>
    <field id = "mediaBufferComplete" type="bool" alwaysNotify="true"/>

    <field id = "mediaSeekStart" type="bool" alwaysNotify="true"/>
    <field id = "mediaSeekComplete" type="bool" alwaysNotify="true"/>

    <field id = "mediaChapterSkip" type="bool" alwaysNotify="true"/>
    <field id = "mediaAdBreakSkip" type="bool" alwaysNotify="true"/>
    <field id = "mediaAdSkip" type="bool" alwaysNotify="true"/>
    <field id = "mediaBitrateChange" type="bool" alwaysNotify="true"/>
 
    <field id = "mediaEventName" type="string" alwaysNotify="true"/>
    <field id = "mediaEventData" type="assocarray" alwaysNotify="true"/>
    <field id = "mediaEventContextData" type="assocarray" alwaysNotify="true"/>
    <field id = "mediaContextData" type="assocarray" alwaysNotify="true"/>
    <field id = "mediaContentData" type="assocarray" alwaysNotify="true"/>
    <field id = "mediaErrorMessage" type="string" alwaysNotify="true"/>
    <field id = "mediaErrorCode" type="string" alwaysNotify="true"/>
    <field id = "mediaQoSData" type="assocarray" alwaysNotify="true"/>    
    <field id = "playhead" type="float"/>   

    <field id = "audienceSetDpidAndDpuuid" type="bool" alwaysNotify="true"/>
    <field id = "audienceSubmitSignal" type="bool" alwaysNotify="true"/>
    <field id = "audienceVisitorProfile" type="assocarray" alwaysNotify="true"/>
    <field id = "audienceDpid" type="string" alwaysNotify="true"/>
    <field id = "audienceDpuuid" type="string" alwaysNotify="true"/>
    <field id = "traits" type="assocarray" alwaysNotify="true"/>

    <field id = "visitorSyncIdentifiers" type="assocarray" alwaysNotify="true"/>
    <field id = "visitorMarketingCloudID" type="string" alwaysNotify="true"/> 
    <field id = "visitorIdentifiers" type="assocarray" alwaysNotify="true"/>

  </interface> 

  <script type="text/brightscript" uri="pkg:/source/adbmobile.brs" />
  <script type = "text/brightscript" >

    <![CDATA[

    function init()
        m.top.functionName = "trackWrapperRun"
    end function

    function trackWrapperRun()
        apiPort = createObject("roMessagePort")

        m.top.observeField("debugLogs", apiPort)
        m.top.observeField("trackAction", apiPort)
        m.top.observeField("trackState", apiPort)
        m.top.observeField("trackingIdentifier", apiPort)
        m.top.observeField("userIdentifier", apiPort)
        m.top.observeField("privacyStatus", apiPort)

        m.top.observeField("mediaUpdateQoS", apiPort)
        m.top.observeField("mediaTrackEvent", apiPort)
        m.top.observeField("mediaAdStart", apiPort)
        m.top.observeField("mediaAdData", apiPort)
        m.top.observeField("mediaAdContextData", apiPort)
        m.top.observeField("mediaAdComplete", apiPort)
        m.top.observeField("mediaAdBreakStart", apiPort)
        m.top.observeField("mediaAdBreakData", apiPort)
        m.top.observeField("mediaAdBreakContextData", apiPort)
        m.top.observeField("mediaAdBreakComplete", apiPort)
        m.top.observeField("mediaChapterStart", apiPort)
        m.top.observeField("mediaChapterData", apiPort)
        m.top.observeField("mediaChapterContextData", apiPort)
        m.top.observeField("mediaChapterComplete", apiPort)
        m.top.observeField("mediaBufferStart", apiPort)
        m.top.observeField("mediaBufferComplete", apiPort)
        m.top.observeField("mediaSeekStart", apiPort)
        m.top.observeField("mediaSeekComplete", apiPort)
        m.top.observeField("mediaChapterSkip", apiPort)
        m.top.observeField("mediaAdBreakSkip", apiPort)
        m.top.observeField("mediaAdSkip", apiPort)
        m.top.observeField("mediaBitrateChange", apiPort)
        m.top.observeField("mediaTrackError", apiPort)
        m.top.observeField("mediaTrackPause", apiPort)
        m.top.observeField("mediaTrackUnload", apiPort)
        m.top.observeField("mediaTrackComplete", apiPort)
        m.top.observeField("mediaTrackPlay", apiPort)
        m.top.observeField("mediaTrackStart", apiPort)
        m.top.observeField("mediaTrackLoad", apiPort)
        m.top.observeField("mediaContextData", apiPort)
        m.top.observeField("mediaContentData", apiPort)
        m.top.observeField("mediaErrorMessage", apiPort)
        m.top.observeField("mediaErrorCode", apiPort)
        
        m.top.observeField("playhead", apiPort)
        m.top.observeField("audienceSetDpidAndDpuuid", apiPort)
        m.top.observeField("audienceSubmitSignal", apiPort)
        m.top.observeField("audienceVisitorProfile", apiPort)
        m.top.observeField("audienceDpid", apiPort)
        m.top.observeField("audienceDpuuid", apiPort)
        m.top.observeField("traits", apiPort)
        m.top.observeField("visitorSyncIdentifiers", apiPort)
        m.top.observeField("visitorMarketingCloudID", apiPort)
        m.top.observeField("visitorIdentifiers", apiPort)
        m.top.observeField("stateEventName", apiPort)
        m.top.observeField("stateEventData", apiPort)
        m.top.observeField("mediaEventName", apiPort)
        m.top.observeField("mediaEventData", apiPort)
        m.top.observeField("mediaEventContextData", apiPort)
        m.top.observeField("actionEventName", apiPort)
        m.top.observeField("actionEventData", apiPort)

        while (true)

          ADBMobile().processMessages()
          ADBMobile().processMediaMessages()

          if m.top.debugLogs = true
            ADBMobile().setDebugLogging(true)
          else if m.top.debugLogs = false
            ADBMobile().setDebugLogging(false)
          endif

          if m.top.playhead <> invalid
            ADBMobile().mediaUpdatePlayhead(m.top.playhead)
          end if

          if m.top.userIdentifier = invalid and ADBMobile().userIdentifier() <> invalid
            m.top.userIdentifier = ADBMobile().userIdentifier()
          endif

          if m.top.visitorMarketingCloudID = invalid and ADBMobile().visitorMarketingCloudID() <> invalid
            m.top.visitorMarketingCloudID = ADBMobile().visitorMarketingCloudID()
          end if

          if m.top.audienceVisitorProfile = invalid and ADBMobile().audienceVisitorProfile() <> invalid
            m.top.audienceVisitorProfile = ADBMobile().audienceVisitorProfile()
          endif

          if m.top.trackingIdentifier = invalid and ADBMobile().trackingIdentifier() <> invalid
            m.top.trackingIdentifier = ADBMobile().trackingIdentifier()
          endif

          if m.top.audienceDpid = invalid and ADBMobile().audienceDpid() <> invalid
            m.top.audienceDpid = ADBMobile().audienceDpid()
          end if

          if m.top.audienceDpuuid = invalid and ADBMobile().audienceDpuuid() <> invalid
            m.top.audienceDpuuid = ADBMobile().audienceDpuuid()
          endif

          msg = wait (1, apiPort)          
          if msg <> invalid

            if type(msg) = "roSGScreenEvent"
              if msg.isScreenClosed() then return invalid
            end if

            field = msg.getField()
                        
            if field = "privacyStatus"
              ADBMobile().setPrivacyStatus(msg.getData())

            else if field = "debugLogging"
              ADBMobile().setDebugLogging(msg.getData())

            else if field = "trackState"
              if m.top.stateEventName <> invalid and m.top.stateEventData <> invalid
                ADBMobile().trackState(m.top.stateEventName, m.top.stateEventData)
              else
                print "Need api event name and api data set before calling trackState"
              endif

            else if field = "trackAction"
              if m.top.actionEventName <> invalid and m.top.actionEventData <> invalid
                ADBMobile().trackAction(m.top.actionEventName, m.top.actionEventData)
              else
                print "Need api event name and api data set before calling trackAction"
              endif

            else if field = "visitorSyncIdentifiers"
              if m.top.visitorIdentifiers <> invalid
                ADBMobile().visitorSyncIdentifiers(m.top.visitorIdentifiers)
              else
                print "Need identifiers before calling visitorSyncIdentifiers"
              endif

            else if field = "audienceSubmitSignal"
              if m.top.traits <> invalid
                ADBMobile().audienceSubmitSignal(m.top.traits)
              endif
            
            else if field = "audienceSetDpidAndDpuuid"
              if m.top.audienceDpid <> invalid and m.top.audienceDpuuid <> invalid
                ADBMobile().audienceSetDpidAndDpuuid(m.top.audienceDpid,m.top.audienceDpuuid)
              endif
            
            else if field = "mediaTrackLoad"
              if m.top.mediaContentData <> invalid and m.top.mediaContextData <> invalid
                ADBMobile().mediaTrackLoad(m.top.mediaContentData, m.top.mediaContextData)
              endif

            else if field = "mediaTrackStart"
              ADBMobile().mediaTrackStart()

            else if field = "mediaTrackPlay"
              ADBMobile().mediaTrackPlay()

            else if field = "mediaTrackComplete"
              ADBMobile().mediaTrackComplete()

            else if field = "mediaTrackUnload"
              ADBMobile().mediaTrackUnload()

            else if field = "mediaTrackPause"
              ADBMobile().mediaTrackPause()

            else if field = "mediaTrackError"
              if m.top.mediaErrorMessage <> invalid and m.top.mediaErrorCode <> invalid
                ADBMobile().mediaTrackError(m.top.mediaErrorMessage, m.top.mediaErrorCode)
              endif
            
            else if field = "mediaAdStart"
              if m.top.mediaAdData <> invalid
                ADBMobile().mediaTrackEvent(ADBMobile().MEDIA_AD_START, m.top.mediaAdData, m.top.mediaAdContextData)
              endif

            else if field = "mediaAdComplete"
              if m.top.mediaAdData <> invalid
                ADBMobile().mediaTrackEvent(ADBMobile().MEDIA_AD_COMPLETE, m.top.mediaAdData, m.top.mediaAdContextData)
              endif
            
            else if field = "mediaAdBreakStart"
              if m.top.mediaAdBreakData <> invalid
                ADBMobile().mediaTrackEvent(ADBMobile().MEDIA_AD_BREAK_START, m.top.mediaAdBreakData, m.top.mediaAdBreakContextData)
              endif

            else if field = "mediaAdBreakComplete"
              if m.top.mediaAdBreakData <> invalid
                ADBMobile().mediaTrackEvent(ADBMobile().MEDIA_AD_BREAK_COMPLETE, m.top.mediaAdBreakData, m.top.mediaAdBreakContextData)
              endif

            else if field = "mediaChapterStart"
              if m.top.mediaChapterData <> invalid
                ADBMobile().mediaTrackEvent(ADBMobile().MEDIA_CHAPTER_START, m.top.mediaChapterData, m.top.mediaChapterContextData)
              endif

            else if field = "mediaChapterComplete"
              if m.top.mediaChapterData <> invalid
                ADBMobile().mediaTrackEvent(ADBMobile().MEDIA_CHAPTER_COMPLETE, m.top.mediaChapterData, m.top.mediaChapterContextData)
              endif

            else if field = "mediaBufferStart"
                ADBMobile().mediaTrackEvent(ADBMobile().MEDIA_BUFFER_START, invalid, invalid)

            else if field = "mediaBufferComplete"
                ADBMobile().mediaTrackEvent(ADBMobile().MEDIA_BUFFER_COMPLETE, invalid, invalid)

            else if field = "mediaSeekStart"
                ADBMobile().mediaTrackEvent(ADBMobile().MEDIA_SEEK_START, invalid, invalid)

            else if field = "mediaSeekComplete"
                ADBMobile().mediaTrackEvent(ADBMobile().MEDIA_SEEK_COMPLETE, invalid, invalid)

            else if field = "mediaChapterSkip"
                ADBMobile().mediaTrackEvent(ADBMobile().MEDIA_CHAPTER_SKIP, invalid, invalid)

            else if field = "mediaAdBreakSkip"
                ADBMobile().mediaTrackEvent(ADBMobile().MEDIA_AD_BREAK_SKIP, invalid, invalid)

            else if field = "mediaAdSkip"
                ADBMobile().mediaTrackEvent(ADBMobile().MEDIA_AD_SKIP, invalid, invalid)

            else if field = "mediaBitrateChange"
                ADBMobile().mediaTrackEvent(ADBMobile().MEDIA_BITRATE_CHANGE, invalid, invalid)

            else if field = "mediaTrackEvent"
              if m.top.mediaEventName <> invalid and m.top.mediaEventData <> invalid
                ADBMobile().mediaTrackEvent(m.top.mediaEventName,m.top.mediaEventData,m.top.mediaEventContextData)
              else
                print "Need mediaEventName and mediaEventData set first"
              endif

            else if field = "mediaUpdateQoS"
              if m.top.mediaQoSData <> invalid
                ADBMobile().mediaUpdateQoS(m.top.mediaQoSData)
              else
                print "m.top.mediaQoSData required before calling mediaQoSData"
              endif
            else
              ''''print "INVALID MSG ON TRACKER"
            end if
          end if                
        end while

    m.top.state = "running"
    end function 

    ]]>

  </script>

</component>